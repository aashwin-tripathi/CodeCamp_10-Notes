{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","items","removeItem","editItem","className","map","item","id","title","key","type","onClick","Alert","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","getLocalStorage","localStorage","getItem","JSON","parse","App","useState","name","setName","setList","isEditing","setIsEditing","editID","setEditID","show","alert","setAlert","showAlert","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","filter","specificItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c7b7097.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FaEdit, FaTrash } from 'react-icons/fa';\r\nconst List = ({ items, removeItem, editItem }) => {\r\n  return (\r\n    <div className='grocery-list'>\r\n      {items.map((item) => {\r\n        const { id, title } = item;\r\n        return (\r\n          <article key={id} className='grocery-item'>\r\n            <p className='title'>{title}</p>\r\n            <div className='btn-container'>\r\n              <button type='button' className='edit-btn' onClick={() => editItem(id)}>\r\n                <FaEdit />\r\n              </button>\r\n              <button type='button' className='delete-btn' onClick={() => removeItem(id)}>\r\n                <FaTrash />\r\n              </button>\r\n            </div>\r\n          </article>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React, { useEffect } from 'react'\r\n\r\nconst Alert = ({ type, msg, removeAlert, list }) => {\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      removeAlert();\r\n    }, 3000);\r\n    return () => clearTimeout(timeout);\r\n  }, [list]);\r\n\r\n  return (\r\n    <p className={`alert alert-${type}`}>{msg}</p>\r\n  );\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState, useEffect } from 'react'\r\nimport List from './List'\r\nimport Alert from './Alert'\r\n\r\nconst getLocalStorage = () => {\r\n  let list = localStorage.getItem('list');\r\n  if (list) {\r\n    return JSON.parse(localStorage.getItem('list'));\r\n  }\r\n  else {\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [name, setName] = useState('');\r\n  const [list, setList] = useState(getLocalStorage);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editID, setEditID] = useState(null);\r\n  const [alert, setAlert] = useState({\r\n    show: false,\r\n    msg: '',\r\n    type: ''\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!name) {\r\n      //display alert\r\n      showAlert(true, 'danger', 'please enter value!');\r\n    }\r\n    else if (name && isEditing) {\r\n      //deal with edit\r\n      setList(list.map((item) => {\r\n        if (item.id === editID) {\r\n          return { ...item, title: name };\r\n        }\r\n        return item;\r\n      }));\r\n      setName('');\r\n      setEditID(null);\r\n      setIsEditing(false);\r\n      showAlert(true, 'success', 'Item in the list is changed')\r\n    }\r\n    else {\r\n      showAlert(true, 'success', 'Item added to the list');\r\n      const newItem = { id: new Date().getTime().toString(), title: name };\r\n      setList([...list, newItem]);\r\n      setName('');\r\n    }\r\n  }\r\n\r\n  const showAlert = (show = false, type = '', msg = '') => {\r\n    setAlert({ show, type, msg });\r\n  }\r\n\r\n  const clearList = () => {\r\n    showAlert(true, 'danger', 'list is cleared');\r\n    setList([]);\r\n  }\r\n\r\n  const removeItem = (id) => {\r\n    showAlert(true, 'danger', 'Item removed from the list');\r\n    setList(list.filter((item) => item.id !== id));\r\n  }\r\n\r\n  const editItem = (id) => {\r\n    const specificItem = list.find((item) => item.id === id);\r\n    setIsEditing(true);\r\n    setEditID(id);\r\n    setName(specificItem.title);\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('list', JSON.stringify(list))\r\n  }, [list]);\r\n\r\n  return (\r\n    <section className='section-center'>\r\n      <form className='grocery-form' onSubmit={handleSubmit}>\r\n        {alert.show && <Alert {...alert} removeAlert={showAlert} list={list} />}\r\n        <h3>grocery bud</h3>\r\n        <div className='form-control'>\r\n          <input type='text' className='grocery' placeholder='e.g. Milk' value={name} onChange={(e) => setName(e.target.value)} />\r\n          <button type='submit' className='submit-btn'>\r\n            {isEditing ? 'edit' : 'submit'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {list.length > 0 && (\r\n        <div className='grocery-container'>\r\n          <List items={list} removeItem={removeItem} editItem={editItem} />\r\n          <button className='clear-btn' onClick={clearList}>\r\n            clear items\r\n          </button>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}